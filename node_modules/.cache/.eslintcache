[{"C:\\Users\\User\\Desktop\\JS\\Authentication\\client\\src\\index.js":"1","C:\\Users\\User\\Desktop\\JS\\Authentication\\client\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\JS\\Authentication\\client\\src\\App.js":"3","C:\\Users\\User\\Desktop\\JS\\Authentication\\client\\src\\helpers\\AuthContext.js":"4"},{"size":513,"mtime":1651694833294,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1651694627700,"results":"7","hashOfConfig":"6"},{"size":3039,"mtime":1652329647560,"results":"8","hashOfConfig":"6"},{"size":87,"mtime":1652324953541,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1d51gp3",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\JS\\Authentication\\client\\src\\index.js",[],["20","21"],"C:\\Users\\User\\Desktop\\JS\\Authentication\\client\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\JS\\Authentication\\client\\src\\App.js",["22","23"],"\nimport React from \"react\";\nimport {useEffect , useState ,useContext } from \"react\";\nimport './App.css';\nimport Axios from 'axios';\nimport {AuthContext} from './helpers/AuthContext';\n\n\nfunction App() {\n\n  const [authState, setAuthState] = useState(false); // initially its boolean cz we check its logged in or not\n\n  const [usernameReg,setUsernameReg] = useState(\"\");\n  const [passwordReg,setPasswordReg] = useState(\"\");\n\n\n  const [username,setUsername] = useState(\"\");\n  const [password,setPassword] = useState(\"\");\n\n  const [loginStatus,setLoginStatus] = useState(\"\");\n  //const setAuthState = useContext(AuthContext);\n\n // Axios.defaults.withCredentials = true;\n\n  const register = () => { // sending variables to backend\n    Axios.post(\"http://localhost:3001/register\" , {username:usernameReg , password:passwordReg}).then((response) => {\n      console.log(response);\n    });\n  };\n\n  const login = () => {\n    Axios.post(\"http://localhost:3001/login\" , {username:username , password:password}).then((response) => {\n      //console.log(response.data);\n      if(response.data.message){\n        setLoginStatus(response.data.message);\n      }else {\n        //setLoginStatus(response.data[0].username);\n        localStorage.setItem(\"accessToken\",response.data);\n        setAuthState(true);\n      }\n    });\n  };\n\n  useEffect(() => {\n    Axios\n      .get(\"http://localhost:3001/auth\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      })\n      .then((response) => {\n        if (response.data.message) {\n          setAuthState(false);\n        } else {\n          setAuthState(true);\n        }\n      });\n  }, []);\n\n  \n /* useEffect(() => {\n    Axios.get(\"http://localhost:3001/login\").then((response) => {\n    \n      if (response.data.loggedIn === true) {\n        setLoginStatus(response.data.user[0].username);\n      }\n      \n    });\n  }, []);*/\n\n  return (\n    <div className=\"App\">\n      <AuthContext.Provider value={{authState,setAuthState}}>\n      { !authState && (\n        <>\n      <div className='Registration'>\n        <h2>Registration</h2>\n        <label>username</label>\n        <input type= \"text\"\n        onChange={(e) =>\n        {setUsernameReg(e.target.value);\n        }\n        }/>\n        <label>password</label>\n        <input type= \"text\"\n        onChange={(e) =>\n          {setPasswordReg(e.target.value);\n          }\n          } />\n        <button onClick={register} >Register</button>\n \n      </div>\n \n      <div className='Login'>\n        <h2>Login</h2>\n        <label>username</label>\n        <input type= \"text\" \n        onChange={(e) =>\n          {setUsername(e.target.value);\n          } \n        } />\n        <label>password</label>\n        <input type= \"text\"\n        onChange={(e) =>\n          {setPassword(e.target.value);\n          }\n          }  />\n        <button onClick={login}>Login</button>\n \n      </div>\n      </>\n      )\n     }\n\n      <div>Hello World!Mein Iha hoo!!</div>\n      </AuthContext.Provider>\n\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Desktop\\JS\\Authentication\\client\\src\\helpers\\AuthContext.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":3,"column":31,"nodeType":"30","messageId":"31","endLine":3,"endColumn":41},{"ruleId":"28","severity":1,"message":"32","line":20,"column":10,"nodeType":"30","messageId":"31","endLine":20,"endColumn":21},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'loginStatus' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]